meta {
  name: Rate Limit Test - 5 Requests
  type: http
  seq: 2
}

get {
  url: http://localhost:3000/api/test
  body: none
  auth: none
}

assert {
  res.status: in [200, 429]
}

script:pre-request {
  // This test will be run multiple times to test rate limiting
  // Bruno doesn't have built-in loops, so this would need to be run manually 5+ times
}

tests {
  test("should handle rate limiting correctly", function() {
    if (res.status === 200) {
      expect(res.body.message).to.equal("API is working");
      expect(parseInt(res.headers["x-ratelimit-remaining"])).to.be.at.least(0);
    } else if (res.status === 429) {
      expect(res.body.error).to.equal("Rate limit exceeded");
      expect(res.body.message).to.equal("You have exceeded the rate limit of 5 requests per minute");
      expect(res.headers["x-ratelimit-remaining"]).to.equal("0");
      expect(res.headers["retry-after"]).to.exist;
    }
  });
}
